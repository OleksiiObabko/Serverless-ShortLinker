service: nodejs-aws-lambda
provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource: "*"

functions:
  sign-up:
    handler: dist/app.handler
    events:
      - http:
          path: /auth/sign-up
          method: POST
      - http:
          path: /auth/sign-in
          method: POST

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    OauthTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: OauthTable
        AttributeDefinitions:
          - AttributeName: accessToken
            AttributeType: S
          - AttributeName: refreshToken
            AttributeType: S
        KeySchema:
          - AttributeName: accessToken
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: RefreshIndex
            KeySchema:
              - AttributeName: refreshToken
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
